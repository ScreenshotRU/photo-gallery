{"version":3,"sources":["Styled.js","Components/LoaderComponent.js","Components/SliderComponent.js","Containers/Slider.js","Components/PopUpComponent.js","Components/BackButtonComponent.js","Components/AlbumComponent.js","Containers/Album.js","Components/AlbumsListComponent.js","Containers/AlbumsList.js","Assets/Img/album.png","Components/UsersListComponent.js","Containers/UsersList.js","GlobalStyles.js","App.js","index.js"],"names":["leftBtn","css","rightBtn","rotate","keyframes","Wrapper","styled","div","Item","FullItem","FullImage","img","AlbumLogo","Text","p","LoaderWrap","DualRing","PopUpWrapper","IconClose","span","ScrollContainer","props","width","SliderWrap","translateX","Card","NavButton","button","position","BackButton","LoaderComponent","SliderComponent","sliderWidth","toggleSlide","data","cardRef","margin","onClick","map","image","ref","src","url","alt","title","id","defaultProps","show","currentIndex","images","Slider","useState","currentSlides","setCurrentSlides","setTranslateX","setSliderWidth","useRef","dataAfter","slice","dataBefore","concat","useEffect","cardWidth","current","getBoundingClientRect","direction","length","PopUpComponent","content","handleClose","item","BackButtonComponent","backButtonUrl","to","className","AlbumComponent","isLoading","photos","togglePopup","hasError","userId","isOpen","index","JSON","stringify","Album","setErrors","setPhotos","setCurrentIndex","setIsLoading","setIsOpen","urlParams","URLSearchParams","window","location","search","get","albumId","a","fetch","json","then","res","catch","err","fetchData","AlbumsListComponent","albums","find","photo","thumbnailUrl","filter","AlbumsList","setAlbums","albumIdsUrl","Promise","all","flat","UsersListComponent","users","logo","name","UsersList","setUsers","GlobalStyle","createGlobalStyle","App","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.74697037.chunk.js","sourcesContent":["import styled, { css, keyframes } from 'styled-components';\n\nconst leftBtn = css`\n  left: 0;\n`;\n\nconst rightBtn = css`\n  right: 0;\n`;\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  display: flex;\n  align-items: flex-start;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n  width: 50%;\n  background-color: #414057;\n  height: 300px;\n  &:nth-child(4n + 2) {\n    background-color: #201f30;\n  }\n  &:nth-child(4n + 3) {\n    background-color: #201f30;\n  }\n`;\n\nexport const FullItem = styled(Item)`\n  height: unset;\n  cursor: pointer;\n`;\n\nexport const FullImage = styled.img`\n  position: relative;\n  width: 100%;\n  max-width: unset;\n`;\n\nexport const AlbumLogo = styled.img`\n  padding: 5px;\n  filter: invert(1);\n  max-width: 50px;\n`;\n\nexport const Text = styled.p`\n  color: #f5f5f5;\n`;\n\nexport const LoaderWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 40%;\n  left: 0;\n  overflow: auto;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const DualRing = styled.div`\n  width: 80px;\n  height: 80px;\n  &:after {\n    content: ' ';\n    display: block;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    color: #f5f5f5;\n    border-radius: 50%;\n    border: 6px solid #f5f5f5 ;\n    border-color: #f5f5f5 transparent #f5f5f5 transparent;\n    animation: ${rotate} 1.2s linear infinite;\n  }\n`;\n\nexport const PopUpWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  z-index: 1000;\n  background: rgba(0, 0, 0, 0.8);\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n`;\n\nexport const IconClose = styled.span`\n  color: #f5f5f5;\n  cursor: pointer;\n  position: fixed;\n  right: 5%;\n  top: calc(100vh - 92vh - 33px);\n  background: #2d2c40;\n  width: 36px;\n  height: 36px;\n  line-height: 34px;\n  text-align: center;\n  border: 2px solid #f5f5f5;\n`;\n\nexport const ScrollContainer = styled.div`\n  overflow: hidden;\n  width: ${(props) => props.width}px;\n  display: flex;\n  text-align: center;\n  margin: 0 auto;\n  align-items: center;\n`;\n\nexport const SliderWrap = styled.div`\n  display: flex;\n  white-space: nowrap;\n  transform: translateX(${(props) => props.translateX}px);\n  transition: 0.3s;\n  & > div {\n    margin-right: 15px;\n  }\n`;\n\nexport const Card = styled.div`\n  position: relative;\n  width: 100vh;\n  height: 100vh;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    max-width: 600px;\n    max-height: 600px;\n  }\n  @media (max-width: 576px) {\n    max-width: 320px;\n    max-height: 320px;\n  }\n  & > img {\n    display: flex;\n    width: 100%;\n    height: 100%;\n  }\n  & > span {\n    color: #f5f5f5;\n    bottom: 0;\n    background: rgb(0, 0, 0, 0.6);\n    width: 100%;\n    position: absolute;\n    white-space: pre-wrap;\n    overflow: hidden;\n    padding: 20px 0;\n    @media (max-width: 768px) {\n      font-size: 12px;\n    }\n  }\n`;\n\nexport const NavButton = styled.button`\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  background: #2d2c40;\n  color: #f5f5f5;\n  border: 2px solid #f5f5f5;\n  position: absolute;\n  ${(props) => (props.position === 'left' ? leftBtn : rightBtn)};\n  top: 50%;\n  margin: 0 20px;\n  z-index: 2;\n`;\n\nexport const BackButton = styled.div`\n  @import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');\n  width: 100px;\n  height: 30px;\n  background: #2d2c3f;\n  position: fixed;\n  color: #f5f5f5;\n  z-index: 2;\n  border: 2px solid #f5f5f5;\n  bottom: 20px;\n  left: 20px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n   background: #403f55; \n  }\n  &:active {\n    opacity: 1;\n    color: #daa520;\n  }\n  & > span {\n    line-height: 30px;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 17px;\n    font-weight: bold;\n  }\n`;\n","import React from 'react';\nimport {DualRing, LoaderWrap} from '../Styled';\n\nconst LoaderComponent = () => (\n    <LoaderWrap>\n        <DualRing/>\n    </LoaderWrap>\n);\n\nexport default LoaderComponent;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ScrollContainer, SliderWrap, Card, NavButton } from '../Styled';\n\nconst SliderComponent = ({sliderWidth, toggleSlide, translateX, data, cardRef, margin}) => {\n  return (\n    <ScrollContainer width={sliderWidth}>\n      <NavButton\n        position=\"left\"\n        onClick={() => toggleSlide('left')}\n      >{`<`}</NavButton>\n      <SliderWrap translateX={translateX}>\n        {data.map((image) => (\n          <Card key={image.id} ref={cardRef} margin={margin}>\n            <img src={image.url} alt=\"SliderComponent\" />\n            <span>{image.title}</span>\n          </Card>\n        ))}\n      </SliderWrap>\n      <NavButton\n        position=\"right\"\n        onClick={() => toggleSlide('right')}\n      >{`>`}</NavButton>\n    </ScrollContainer>\n  );\n};\n\nSliderComponent.defaultProps = {\n  data: [],\n  sliderWidth: 0,\n  translateX: 0,\n  cardRef: {},\n  margin: 0,\n  show: 1,\n  toggleSlide: () => {},\n  currentIndex: 0,\n  images: [],\n};\n\nSliderComponent.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      url: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n  show: PropTypes.number,\n  margin: PropTypes.number,\n  sliderWidth: PropTypes.number,\n  translateX: PropTypes.number,\n  cardRef: PropTypes.objectOf(\n    PropTypes.shape({\n      current: PropTypes.string,\n    })\n  ),\n  toggleSlide: PropTypes.func,\n  currentIndex: PropTypes.number,\n  images: PropTypes.array,\n};\n\nexport default SliderComponent;\n","import React, { useState, useRef, useEffect } from 'react';\nimport SliderComponent from '../Components/SliderComponent';\nimport PropTypes from 'prop-types';\n\nconst Slider = ({images, currentIndex, margin, show}) => {\n  const [currentSlides, setCurrentSlides] = useState(show);\n  const [translateX, setTranslateX] = useState(0);\n  const [sliderWidth, setSliderWidth] = useState(0);\n  const cardRef = useRef(null);\n  const dataAfter = images.slice(currentIndex);\n  const dataBefore = images.slice(0, currentIndex);\n  const data = dataAfter.concat(dataBefore);\n\n  useEffect(() => {\n    const cardWidth =\n      cardRef.current.getBoundingClientRect().width + margin;\n    setSliderWidth(cardWidth * show - margin);\n  }, []);\n\n  const toggleSlide = (direction) => {\n    cardRef.current.getBoundingClientRect();\n    const cardWidth =\n      cardRef.current.getBoundingClientRect().width + margin;\n    if (cardRef.current) {\n      if (direction === 'right' && images.length > currentSlides) {\n        setCurrentSlides(currentSlides + 1);\n        setTranslateX(translateX - cardWidth);\n      } else if (direction === 'left' && currentSlides > show) {\n        setCurrentSlides(currentSlides - 1);\n        setTranslateX(translateX + cardWidth);\n      } else if (\n        direction === 'right' &&\n        currentSlides >= images.length\n      ) {\n        setCurrentSlides(show);\n        setTranslateX(0);\n      } else if (direction === 'left' && currentSlides <= show) {\n        setCurrentSlides(images.length);\n        setTranslateX(-(cardWidth * (images.length - show)));\n      }\n    }\n  };\n\n  return (\n    <SliderComponent\n      sliderWidth={sliderWidth}\n      toggleSlide={toggleSlide}\n      translateX={translateX}\n      data={data}\n      cardRef={cardRef}\n      margin={margin}\n    />\n  );\n};\n\nSliderComponent.defaultProps = {\n  images: [],\n  currentIndex: 0,\n  margin: 0,\n  show: 1,\n};\n\nSlider.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      albumId: PropTypes.number,\n      url: PropTypes.string,\n      title: PropTypes.string,\n      thumbnailUrl: PropTypes.string,\n    })\n  ).isRequired,\n  show: PropTypes.number,\n  margin: PropTypes.number,\n  currentIndex: PropTypes.number,\n};\n\nexport default Slider;\n","import React from 'react';\nimport Slider from '../Containers/Slider';\nimport PropTypes from 'prop-types';\nimport {IconClose, PopUpWrapper} from '../Styled';\n\nconst PopUpComponent = ({content, currentIndex, handleClose}) => {\n\n  return (\n    <PopUpWrapper>\n      <div>\n        <Slider\n          images={content.map((item) => item)}\n          show={1}\n          margin={15}\n          currentIndex={currentIndex}\n        />\n        <IconClose onClick={handleClose}>\n          x\n        </IconClose>\n      </div>\n    </PopUpWrapper>\n  );\n};\n\nPopUpComponent.defaultProps = {\n  content: [],\n  show: null,\n  margin: null,\n  currentIndex: null,\n  handleClose: () => {},\n};\n\nPopUpComponent.propTypes = {\n  content: PropTypes.array,\n  show: PropTypes.number,\n  margin: PropTypes.number,\n  currentIndex: PropTypes.number,\n  handleClose: PropTypes.func,\n};\n\nexport default PopUpComponent;\n","import React from 'react';\nimport {BackButton} from '../Styled';\nimport {Link} from 'react-router-dom';\n\nconst BackButtonComponent = ({backButtonUrl}) => {\n    return(\n  <Link to={backButtonUrl} className=\"link\">\n    <BackButton>\n      <span>Go Back</span>\n    </BackButton>\n  </Link>\n    )\n};\nexport default BackButtonComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LoaderComponent from './LoaderComponent';\nimport PopUpComponent from './PopUpComponent';\nimport { FullItem, FullImage, Wrapper } from '../Styled';\n\nimport BackButtonComponent from './BackButtonComponent';\n\nconst AlbumComponent = ({isLoading, photos, togglePopup, currentIndex, hasError, userId, isOpen}) => (\n  <Wrapper>\n    {isLoading ? (\n      <LoaderComponent />\n    ) : (\n      photos.map((item, index) => (\n        <FullItem\n          key={item.id}\n          onClick={() => togglePopup(index)}\n          id={item.id}\n        >\n          <FullImage src={item.url} alt={item.title} />\n        </FullItem>\n      ))\n    )}\n    {isOpen && (\n      <PopUpComponent\n        content={photos}\n        currentIndex={currentIndex}\n        handleClose={togglePopup}\n      />\n    )}\n    {hasError && <span>Has error: {JSON.stringify(hasError)}</span>}\n      <BackButtonComponent backButtonUrl={`/user?id=${userId}`} />\n  </Wrapper>\n);\n\nAlbumComponent.defaultProps = {\n  photos: [],\n  isLoading: false,\n  hasError: false,\n  togglePopup: () => {},\n  isOpen: false,\n  currentIndex: 0,\n  userId: 1,\n};\n\n\nAlbumComponent.propTypes = {\n  photos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      albumId: PropTypes.number,\n      thumbnailUrl: PropTypes.string,\n      title: PropTypes.string,\n      url: PropTypes.string,\n    })\n  ),\n  currentIndex: PropTypes.number,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n  togglePopup: PropTypes.func,\n  isOpen: PropTypes.bool,\n  userId: PropTypes.string,\n};\n\nexport default AlbumComponent;\n","import React, { useState, useEffect } from 'react';\nimport AlbumComponent from '../Components/AlbumComponent';\n\nconst Album = () => {\n  const [hasError, setErrors] = useState(false);\n  const [photos, setPhotos] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const urlParams = new URLSearchParams(window.location.search);\n  const userId = urlParams.get('user');\n\n  const togglePopup = (index) => {\n    const currentIndex = typeof index === 'number' ? index : 0;\n    setCurrentIndex(currentIndex);\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    const albumId = urlParams.get('id');\n    const url = `https://jsonplaceholder.typicode.com/albums/${albumId}/photos`;\n    const fetchData = async () => {\n      setIsLoading(true);\n      const res = await fetch(url);\n      res\n        .json()\n        .then((res) => {\n          setPhotos(res);\n          setIsLoading(false);\n          return res;\n        })\n        .catch((err) => setErrors(err));\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <AlbumComponent\n      isLoading={isLoading}\n      currentIndex={currentIndex}\n      photos={photos}\n      hasError={hasError}\n      togglePopup={togglePopup}\n      isOpen={isOpen}\n      userId={userId}\n    />\n  );\n};\n\nexport default Album;\n","import { Link } from 'react-router-dom';\nimport LoaderComponent from './LoaderComponent';\nimport { Item, Text, Wrapper } from '../Styled';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BackButtonComponent from './BackButtonComponent';\n\nconst AlbumsListComponent = ({albums, hasError, isLoading, photos}) => {\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <LoaderComponent />\n      ) : (\n        albums.map((item) => (\n          <Item key={item.id}>\n            <Link\n              to={`/album?id=${item.id}&user=${item.userId}`}\n              className=\"link album-title\"\n            >\n              {item.title}\n            </Link>\n            <img\n              src={\n                photos.find((photo) => photo.albumId === item.id)\n                  ?.thumbnailUrl\n              }\n              alt={item.title}\n            />\n            <Text>\n              {photos.filter((photo) => photo.albumId === item.id).length}{' '}\n              photos\n            </Text>\n          </Item>\n        ))\n      )}\n\n      {hasError && (\n        <span>Has error: {JSON.stringify(hasError)}</span>\n      )}\n      <BackButtonComponent backButtonUrl=\"/photo-gallery\" />\n    </Wrapper>\n  );\n};\nAlbumsListComponent.defaultProps = {\n  hasError: false,\n  albums: [],\n  photos: [],\n  isLoading: false,\n};\n\nAlbumsListComponent.propTypes = {\n  hasError: PropTypes.bool,\n  albums: PropTypes.array,\n  photos: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default AlbumsListComponent;\n","import React, { useState, useEffect } from 'react';\nimport AlbumsListComponent from '../Components/AlbumsListComponent';\n\nconst AlbumsList = () => {\n    const [hasError, setErrors] = useState(false);\n    const [albums, setAlbums] = useState([]);\n    const [photos, setPhotos] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        const userId = urlParams.get('id');\n        const url = `https://jsonplaceholder.typicode.com/users/${userId}/albums`;\n        const fetchData = async () => {\n            setIsLoading(true);\n            const res = await fetch(url);\n            res\n                .json()\n                .then((res) => {\n                    setAlbums(res);\n                    return res;\n                })\n                .then((res) => {\n                    const albumIdsUrl = res.map(\n                        (item) =>\n                            `https://jsonplaceholder.typicode.com/albums/${item.id}/photos`\n                    );\n                    Promise.all(\n                        albumIdsUrl.map((url) => fetch(url).then((res) => res.json()))\n                    ).then((res) => {\n                        setPhotos(res.flat(1));\n                        setIsLoading(false);\n                    });\n                })\n                .catch((err) => setErrors(err));\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <AlbumsListComponent\n            hasError={hasError}\n            albums={albums}\n            photos={photos}\n            isLoading={isLoading}\n        />\n    )\n};\n\nexport default AlbumsList;","export default __webpack_public_path__ + \"static/media/album.101c4a3c.png\";","import { Link } from 'react-router-dom';\nimport LoaderComponent from './LoaderComponent';\nimport PropTypes from 'prop-types';\nimport logo from '../Assets/Img/album.png';\nimport React from 'react';\nimport {AlbumLogo, Item, Text, Wrapper} from '../Styled';\n\nconst UsersListComponent = (props) => {\n  return (\n    <Wrapper>\n      {props.isLoading ? (\n        <LoaderComponent />\n      ) : (\n        props.users.map((item) => (\n          <Item key={item.id} >\n            <AlbumLogo src={logo} alt=\"AlbumComponent ico\" />\n            <Text>Albums by</Text>\n            <Link to={`/user?id=${item.id}`} className=\"link\">\n              {item.name}\n            </Link>\n          </Item>\n        ))\n      )}\n      {props.hasError && (\n        <span>Has error: {JSON.stringify(props.hasError)}</span>\n      )}\n    </Wrapper>\n  );\n};\n\nUsersListComponent.defaultProps = {\n  isLoading: true,\n  users: [],\n  hasError: true,\n};\n\nUsersListComponent.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n  hasError: PropTypes.bool,\n  isLoading: PropTypes.bool,\n};\n\nexport default UsersListComponent;\n","import React, { useState, useEffect } from 'react';\nimport UsersListComponent from '../Components/UsersListComponent';\n\nconst UsersList = () => {\n  const [hasError, setErrors] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const url = 'https://jsonplaceholder.typicode.com/users';\n    const fetchData = async () => {\n      setIsLoading(true);\n      const res = await fetch(url);\n      res\n        .json()\n        .then((res) => {\n          setUsers(res);\n          setIsLoading(false);\n          return res;\n        })\n        .catch((err) => setErrors(err));\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <UsersListComponent\n      hasError={hasError}\n      users={users}\n      isLoading={isLoading}\n    />\n  );\n};\n\n\nexport default UsersList;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color: #2d2c40;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n.App {\n  max-width: 1280px;\n  margin: 0 auto;\n  background-color: #2d2c40;\n}\n\n.link {\n  padding: 5px;\n  color: #f5f5f5;\n}\n\n.link:hover {\n  color: #daa520;\n}\n\n.link.album-title {\n  margin: 1em;\n}\n`;\n\n\nexport default GlobalStyle;\n","import { Route, BrowserRouter } from 'react-router-dom';\nimport React from 'react';\nimport Album from './Containers/Album';\nimport AlbumsList from './Containers/AlbumsList';\nimport UsersList from './Containers/UsersList';\nimport GlobalStyle from './GlobalStyles';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <BrowserRouter>\n        <Route exact\n          path=\"/photo-gallery\"\n          render={() => <UsersList /> }\n        />\n          <Route exact\n              path=\"/user\"\n              render={() => <AlbumsList />}\n          />\n          <Route exact\n              path=\"/album\"\n              render={() => <Album />}\n          />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}